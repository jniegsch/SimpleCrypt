<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="AESCore_8h" kind="file" language="C++">
    <compoundname>AESCore.h</compoundname>
    <includes local="no">stdlib.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">stdint.h</includes>
    <includedby refid="AESarm_8h" local="yes">src/AESarm.h</includedby>
    <includedby refid="AESCore_8c" local="yes">src/AESCore.c</includedby>
    <incdepgraph>
      <node id="25">
        <label>stdint.h</label>
      </node>
      <node id="23">
        <label>stdlib.h</label>
      </node>
      <node id="22">
        <label>src/AESCore.h</label>
        <link refid="AESCore_8h"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="29">
        <label>src/AESCore.c</label>
        <link refid="AESCore_8c"/>
      </node>
      <node id="26">
        <label>src/AESCore.h</label>
        <link refid="AESCore_8h"/>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>src/AESarm.c</label>
        <link refid="AESarm_8c"/>
      </node>
      <node id="27">
        <label>src/AESarm.h</label>
        <link refid="AESarm_8h"/>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
      <sectiondef kind="user-defined">
      <header>AES Core Error String</header>
      <description><para>Access to the standardized and predefined error strings for the AES Library </para></description>
      <memberdef kind="function" id="AESCore_8h_1a92f0d703e369816f15dc2f4a41599085" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* aes_mode_error</definition>
        <argsstring>(void)</argsstring>
        <name>aes_mode_error</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Returns the standardized error message for a wrong AES key mode. </para>        </briefdescription>
        <detaileddescription>
<para>Returns the standardized error message for when a wrong AES key mode was passed. Message is: <programlisting><codeline><highlight class="normal">Fatal<sp/>Error:<sp/>an<sp/>invalid<sp/>aes<sp/>mode<sp/>was<sp/>passed.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;<sp/>Even<sp/>though<sp/>Rijndael<sp/>supports<sp/>several<sp/>lengths<sp/>of<sp/>key<sp/>bits,<sp/>AES<sp/>is<sp/>defined<sp/>to<sp/>only<sp/>support<sp/>128,<sp/>192,<sp/>or<sp/>256<sp/>bits</highlight></codeline>
</programlisting></para><para><simplesect kind="return"><para>A string for the specific error. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/AESCore.h" line="46" column="1" bodyfile="src/AESCore.c" bodystart="38" bodyend="40"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>S-box definitions</header>
      <description><para>Allows access to the predefined and set S-box and inverse S-box </para></description>
      <memberdef kind="function" id="AESCore_8h_1a17c86bba109cf851608b9a515486adc1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t s_box</definition>
        <argsstring>(uint8_t byte)</argsstring>
        <name>s_box</name>
        <param>
          <type>uint8_t</type>
          <declname>byte</declname>
        </param>
        <briefdescription>
<para>Returns a byte transformed by the S-box. </para>        </briefdescription>
        <detaileddescription>
<para>Transforms the input byte using the AES S-box. The S-box is defined as follows: <programlisting><codeline><highlight class="normal">0x63,<sp/>0x7c,<sp/>0x77,<sp/>0x7b,<sp/>0xf2,<sp/>0x6b,<sp/>0x6f,<sp/>0xc5,<sp/>0x30,<sp/>0x01,<sp/>0x67,<sp/>0x2b,<sp/>0xfe,<sp/>0xd7,<sp/>0xab,<sp/>0x76,</highlight></codeline>
<codeline><highlight class="normal">0xca,<sp/>0x82,<sp/>0xc9,<sp/>0x7d,<sp/>0xfa,<sp/>0x59,<sp/>0x47,<sp/>0xf0,<sp/>0xad,<sp/>0xd4,<sp/>0xa2,<sp/>0xaf,<sp/>0x9c,<sp/>0xa4,<sp/>0x72,<sp/>0xc0,</highlight></codeline>
<codeline><highlight class="normal">0xb7,<sp/>0xfd,<sp/>0x93,<sp/>0x26,<sp/>0x36,<sp/>0x3f,<sp/>0xf7,<sp/>0xcc,<sp/>0x34,<sp/>0xa5,<sp/>0xe5,<sp/>0xf1,<sp/>0x71,<sp/>0xd8,<sp/>0x31,<sp/>0x15,</highlight></codeline>
<codeline><highlight class="normal">0x04,<sp/>0xc7,<sp/>0x23,<sp/>0xc3,<sp/>0x18,<sp/>0x96,<sp/>0x05,<sp/>0x9a,<sp/>0x07,<sp/>0x12,<sp/>0x80,<sp/>0xe2,<sp/>0xeb,<sp/>0x27,<sp/>0xb2,<sp/>0x75,</highlight></codeline>
<codeline><highlight class="normal">0x09,<sp/>0x83,<sp/>0x2c,<sp/>0x1a,<sp/>0x1b,<sp/>0x6e,<sp/>0x5a,<sp/>0xa0,<sp/>0x52,<sp/>0x3b,<sp/>0xd6,<sp/>0xb3,<sp/>0x29,<sp/>0xe3,<sp/>0x2f,<sp/>0x84,</highlight></codeline>
<codeline><highlight class="normal">0x53,<sp/>0xd1,<sp/>0x00,<sp/>0xed,<sp/>0x20,<sp/>0xfc,<sp/>0xb1,<sp/>0x5b,<sp/>0x6a,<sp/>0xcb,<sp/>0xbe,<sp/>0x39,<sp/>0x4a,<sp/>0x4c,<sp/>0x58,<sp/>0xcf,</highlight></codeline>
<codeline><highlight class="normal">0xd0,<sp/>0xef,<sp/>0xaa,<sp/>0xfb,<sp/>0x43,<sp/>0x4d,<sp/>0x33,<sp/>0x85,<sp/>0x45,<sp/>0xf9,<sp/>0x02,<sp/>0x7f,<sp/>0x50,<sp/>0x3c,<sp/>0x9f,<sp/>0xa8,</highlight></codeline>
<codeline><highlight class="normal">0x51,<sp/>0xa3,<sp/>0x40,<sp/>0x8f,<sp/>0x92,<sp/>0x9d,<sp/>0x38,<sp/>0xf5,<sp/>0xbc,<sp/>0xb6,<sp/>0xda,<sp/>0x21,<sp/>0x10,<sp/>0xff,<sp/>0xf3,<sp/>0xd2,</highlight></codeline>
<codeline><highlight class="normal">0xcd,<sp/>0x0c,<sp/>0x13,<sp/>0xec,<sp/>0x5f,<sp/>0x97,<sp/>0x44,<sp/>0x17,<sp/>0xc4,<sp/>0xa7,<sp/>0x7e,<sp/>0x3d,<sp/>0x64,<sp/>0x5d,<sp/>0x19,<sp/>0x73,</highlight></codeline>
<codeline><highlight class="normal">0x60,<sp/>0x81,<sp/>0x4f,<sp/>0xdc,<sp/>0x22,<sp/>0x2a,<sp/>0x90,<sp/>0x88,<sp/>0x46,<sp/>0xee,<sp/>0xb8,<sp/>0x14,<sp/>0xde,<sp/>0x5e,<sp/>0x0b,<sp/>0xdb,</highlight></codeline>
<codeline><highlight class="normal">0xe0,<sp/>0x32,<sp/>0x3a,<sp/>0x0a,<sp/>0x49,<sp/>0x06,<sp/>0x24,<sp/>0x5c,<sp/>0xc2,<sp/>0xd3,<sp/>0xac,<sp/>0x62,<sp/>0x91,<sp/>0x95,<sp/>0xe4,<sp/>0x79,</highlight></codeline>
<codeline><highlight class="normal">0xe7,<sp/>0xc8,<sp/>0x37,<sp/>0x6d,<sp/>0x8d,<sp/>0xd5,<sp/>0x4e,<sp/>0xa9,<sp/>0x6c,<sp/>0x56,<sp/>0xf4,<sp/>0xea,<sp/>0x65,<sp/>0x7a,<sp/>0xae,<sp/>0x08,</highlight></codeline>
<codeline><highlight class="normal">0xba,<sp/>0x78,<sp/>0x25,<sp/>0x2e,<sp/>0x1c,<sp/>0xa6,<sp/>0xb4,<sp/>0xc6,<sp/>0xe8,<sp/>0xdd,<sp/>0x74,<sp/>0x1f,<sp/>0x4b,<sp/>0xbd,<sp/>0x8b,<sp/>0x8a,</highlight></codeline>
<codeline><highlight class="normal">0x70,<sp/>0x3e,<sp/>0xb5,<sp/>0x66,<sp/>0x48,<sp/>0x03,<sp/>0xf6,<sp/>0x0e,<sp/>0x61,<sp/>0x35,<sp/>0x57,<sp/>0xb9,<sp/>0x86,<sp/>0xc1,<sp/>0x1d,<sp/>0x9e,</highlight></codeline>
<codeline><highlight class="normal">0xe1,<sp/>0xf8,<sp/>0x98,<sp/>0x11,<sp/>0x69,<sp/>0xd9,<sp/>0x8e,<sp/>0x94,<sp/>0x9b,<sp/>0x1e,<sp/>0x87,<sp/>0xe9,<sp/>0xce,<sp/>0x55,<sp/>0x28,<sp/>0xdf,</highlight></codeline>
<codeline><highlight class="normal">0x8c,<sp/>0xa1,<sp/>0x89,<sp/>0x0d,<sp/>0xbf,<sp/>0xe6,<sp/>0x42,<sp/>0x68,<sp/>0x41,<sp/>0x99,<sp/>0x2d,<sp/>0x0f,<sp/>0xb0,<sp/>0x54,<sp/>0xbb,<sp/>0x16</highlight></codeline>
</programlisting></para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>byte</parametername>
</parameternamelist>
<parameterdescription>
<para>The input byte to transform using the S-box</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A byte that is defined by the S-box when given a byte </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/AESCore.h" line="83" column="1" bodyfile="src/AESCore.c" bodystart="81" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="AESCore_8h_1af1c3a6ec74179802004bcb49541e16c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t inv_s_box</definition>
        <argsstring>(uint8_t byte)</argsstring>
        <name>inv_s_box</name>
        <param>
          <type>uint8_t</type>
          <declname>byte</declname>
        </param>
        <briefdescription>
<para>Returns a byte transformed by the inverse S-box. </para>        </briefdescription>
        <detaileddescription>
<para>Transforms the input byte using the AES inverse S-box. The inverse of the S-box is defined as follows: <programlisting><codeline><highlight class="normal">0x52,<sp/>0x09,<sp/>0x6a,<sp/>0xd5,<sp/>0x30,<sp/>0x36,<sp/>0xa5,<sp/>0x38,<sp/>0xbf,<sp/>0x40,<sp/>0xa3,<sp/>0x9e,<sp/>0x81,<sp/>0xf3,<sp/>0xd7,<sp/>0xfb,</highlight></codeline>
<codeline><highlight class="normal">0x7c,<sp/>0xe3,<sp/>0x39,<sp/>0x82,<sp/>0x9b,<sp/>0x2f,<sp/>0xff,<sp/>0x87,<sp/>0x34,<sp/>0x8e,<sp/>0x43,<sp/>0x44,<sp/>0xc4,<sp/>0xde,<sp/>0xe9,<sp/>0xcb,</highlight></codeline>
<codeline><highlight class="normal">0x54,<sp/>0x7b,<sp/>0x94,<sp/>0x32,<sp/>0xa6,<sp/>0xc2,<sp/>0x23,<sp/>0x3d,<sp/>0xee,<sp/>0x4c,<sp/>0x95,<sp/>0x0b,<sp/>0x42,<sp/>0xfa,<sp/>0xc3,<sp/>0x4e,</highlight></codeline>
<codeline><highlight class="normal">0x08,<sp/>0x2e,<sp/>0xa1,<sp/>0x66,<sp/>0x28,<sp/>0xd9,<sp/>0x24,<sp/>0xb2,<sp/>0x76,<sp/>0x5b,<sp/>0xa2,<sp/>0x49,<sp/>0x6d,<sp/>0x8b,<sp/>0xd1,<sp/>0x25,</highlight></codeline>
<codeline><highlight class="normal">0x72,<sp/>0xf8,<sp/>0xf6,<sp/>0x64,<sp/>0x86,<sp/>0x68,<sp/>0x98,<sp/>0x16,<sp/>0xd4,<sp/>0xa4,<sp/>0x5c,<sp/>0xcc,<sp/>0x5d,<sp/>0x65,<sp/>0xb6,<sp/>0x92,</highlight></codeline>
<codeline><highlight class="normal">0x6c,<sp/>0x70,<sp/>0x48,<sp/>0x50,<sp/>0xfd,<sp/>0xed,<sp/>0xb9,<sp/>0xda,<sp/>0x5e,<sp/>0x15,<sp/>0x46,<sp/>0x57,<sp/>0xa7,<sp/>0x8d,<sp/>0x9d,<sp/>0x84,</highlight></codeline>
<codeline><highlight class="normal">0x90,<sp/>0xd8,<sp/>0xab,<sp/>0x00,<sp/>0x8c,<sp/>0xbc,<sp/>0xd3,<sp/>0x0a,<sp/>0xf7,<sp/>0xe4,<sp/>0x58,<sp/>0x05,<sp/>0xb8,<sp/>0xb3,<sp/>0x45,<sp/>0x06,</highlight></codeline>
<codeline><highlight class="normal">0xd0,<sp/>0x2c,<sp/>0x1e,<sp/>0x8f,<sp/>0xca,<sp/>0x3f,<sp/>0x0f,<sp/>0x02,<sp/>0xc1,<sp/>0xaf,<sp/>0xbd,<sp/>0x03,<sp/>0x01,<sp/>0x13,<sp/>0x8a,<sp/>0x6b,</highlight></codeline>
<codeline><highlight class="normal">0x3a,<sp/>0x91,<sp/>0x11,<sp/>0x41,<sp/>0x4f,<sp/>0x67,<sp/>0xdc,<sp/>0xea,<sp/>0x97,<sp/>0xf2,<sp/>0xcf,<sp/>0xce,<sp/>0xf0,<sp/>0xb4,<sp/>0xe6,<sp/>0x73,</highlight></codeline>
<codeline><highlight class="normal">0x96,<sp/>0xac,<sp/>0x74,<sp/>0x22,<sp/>0xe7,<sp/>0xad,<sp/>0x35,<sp/>0x85,<sp/>0xe2,<sp/>0xf9,<sp/>0x37,<sp/>0xe8,<sp/>0x1c,<sp/>0x75,<sp/>0xdf,<sp/>0x6e,</highlight></codeline>
<codeline><highlight class="normal">0x47,<sp/>0xf1,<sp/>0x1a,<sp/>0x71,<sp/>0x1d,<sp/>0x29,<sp/>0xc5,<sp/>0x89,<sp/>0x6f,<sp/>0xb7,<sp/>0x62,<sp/>0x0e,<sp/>0xaa,<sp/>0x18,<sp/>0xbe,<sp/>0x1b,</highlight></codeline>
<codeline><highlight class="normal">0xfc,<sp/>0x56,<sp/>0x3e,<sp/>0x4b,<sp/>0xc6,<sp/>0xd2,<sp/>0x79,<sp/>0x20,<sp/>0x9a,<sp/>0xdb,<sp/>0xc0,<sp/>0xfe,<sp/>0x78,<sp/>0xcd,<sp/>0x5a,<sp/>0xf4,</highlight></codeline>
<codeline><highlight class="normal">0x1c,<sp/>0xdd,<sp/>0xa8,<sp/>0x33,<sp/>0x88,<sp/>0x07,<sp/>0xc7,<sp/>0x31,<sp/>0xb1,<sp/>0x12,<sp/>0x10,<sp/>0x59,<sp/>0x27,<sp/>0x80,<sp/>0xec,<sp/>0x5f,</highlight></codeline>
<codeline><highlight class="normal">0x60,<sp/>0x51,<sp/>0x7f,<sp/>0xa9,<sp/>0x19,<sp/>0xb5,<sp/>0x4a,<sp/>0x0d,<sp/>0x2d,<sp/>0xe5,<sp/>0x7a,<sp/>0x9f,<sp/>0x93,<sp/>0xc9,<sp/>0x9c,<sp/>0xef,</highlight></codeline>
<codeline><highlight class="normal">0xa0,<sp/>0xe0,<sp/>0x3b,<sp/>0x4d,<sp/>0xae,<sp/>0x2a,<sp/>0xf5,<sp/>0xb0,<sp/>0xc8,<sp/>0xeb,<sp/>0xbb,<sp/>0x3c,<sp/>0x83,<sp/>0x53,<sp/>0x99,<sp/>0x61,</highlight></codeline>
<codeline><highlight class="normal">0x17,<sp/>0x2b,<sp/>0x04,<sp/>0x7e,<sp/>0xba,<sp/>0x77,<sp/>0xd6,<sp/>0x26,<sp/>0xe1,<sp/>0x69,<sp/>0x14,<sp/>0x63,<sp/>0x55,<sp/>0x21,<sp/>0x0c,<sp/>0x7d</highlight></codeline>
</programlisting></para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>byte</parametername>
</parameternamelist>
<parameterdescription>
<para>The input byte to transform using the inverse S-box</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A byte that is defined by the inverse S-box when given a byte </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/AESCore.h" line="112" column="1" bodyfile="src/AESCore.c" bodystart="85" bodyend="87"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Sub and Rot Words</header>
      <description><para>Substitute and Rotate words (<computeroutput>4 bytes</computeroutput>) based on the functions defined in the AES algorithm </para></description>
      <memberdef kind="function" id="AESCore_8h_1af8ac0519c6ca66f8c4a513815e68d3c1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t sub_word</definition>
        <argsstring>(uint32_t inp)</argsstring>
        <name>sub_word</name>
        <param>
          <type>uint32_t</type>
          <declname>inp</declname>
        </param>
        <briefdescription>
<para>Applies the SubWord of the AES algorithm. </para>        </briefdescription>
        <detaileddescription>
<para>The function takes a word (which is <computeroutput>4 bytes</computeroutput>) and applies the S-box to each byte to produce an output word.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inp</parametername>
</parameternamelist>
<parameterdescription>
<para>The input word (<computeroutput>32 bits</computeroutput> or <computeroutput>4 bytes</computeroutput>)</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A word resulting from the S-box transformation on the input word </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/AESCore.h" line="131" column="1" bodyfile="src/AESCore.c" bodystart="90" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="AESCore_8h_1a5d077e49e14f44ad41747b7771bc63eb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t rot_word</definition>
        <argsstring>(uint32_t inp)</argsstring>
        <name>rot_word</name>
        <param>
          <type>uint32_t</type>
          <declname>inp</declname>
        </param>
        <briefdescription>
<para>Applies the RotWord of the AES algorithm. </para>        </briefdescription>
        <detaileddescription>
<para>The function takes a word (which is <computeroutput>4 bytes</computeroutput>) and performs a cyclic permutation. The permutation is as follows: <programlisting><codeline><highlight class="normal">[a_0,<sp/>a_1,<sp/>a_2,<sp/>a_3]<sp/>-&gt;<sp/>[a_1,<sp/>a_2,<sp/>a_3,<sp/>a_0]</highlight></codeline>
</programlisting></para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inp</parametername>
</parameternamelist>
<parameterdescription>
<para>The input word (<computeroutput>32 bits</computeroutput> or <computeroutput>4 bytes</computeroutput>)</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A word resulting from the permutation on the input word </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/AESCore.h" line="145" column="1" bodyfile="src/AESCore.c" bodystart="98" bodyend="100"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>The header file of the library core which defines essentials used in all implementations</para><para>08-26-2018 <simplesect kind="version"><para>0.0.1 </para></simplesect>
<simplesect kind="author"><para>Jan Niegsch </para></simplesect>
</para>    </detaileddescription>
    <location file="src/AESCore.h"/>
  </compounddef>
</doxygen>
