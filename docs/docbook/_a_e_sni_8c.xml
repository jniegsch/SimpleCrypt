<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_a_e_sni_8c">
    <title>AESni.c File Reference</title>
    <programlisting>#include &quot;AESni.h&quot;</programlisting>
        <section>
            <title>Macros</title>
            <para>
                <itemizedlist>
                    <listitem>
                            <para>#define <link linkend="_a_e_sni_8c_1ad64c5463835b59c2527c228e9df65e37">keygen_once_128</link> schedule[i] = aes_128_expAssist(schedule[p], _mm_aeskeygenassist_si128(schedule[p], rcon))</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                            <para>#define <link linkend="_a_e_sni_8c_1a6245ab7697aaa5416646c62d5cb3815e">keygen_three_192</link> schedule[i] = temp1;\
			schedule[i+1] = temp3;\
			temp2 = _mm_aeskeygenassist_si128 (temp3, rcon1);\
			aes_192_expAssist(&amp;temp1, &amp;temp2, &amp;temp3);\
			schedule[i+1] = (__m128i)_mm_shuffle_pd((__m128d)schedule[i+1], (__m128d)temp1,0);\
			schedule[i+2] = (__m128i)_mm_shuffle_pd((__m128d)temp1, (__m128d)temp3, 1);\
			temp2 = _mm_aeskeygenassist_si128 (temp3, rcon2);\
			aes_192_expAssist(&amp;temp1, &amp;temp2, &amp;temp3)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                            <para>#define <link linkend="_a_e_sni_8c_1ab09341db2dcfcc6c6fcf8d6486b45bca">keygen_twice_256</link> temp2 = _mm_aeskeygenassist_si128 (temp3, rcon);\
			aes_256_expAssist1(&amp;temp1, &amp;temp2);\
			schedule[i] = temp1;\
			aes_256_expAssist2(&amp;temp1, &amp;temp3);\
			schedule[i+1] = temp3</para>
                    </listitem>
                </itemizedlist>
            </para>
        </section>
        <section>
            <title>Functions</title>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>static void <link linkend="_a_e_sni_8c_1abdf98fa78e15fbbaafbfbf50e73446aa">initializer</link> (
void )</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>static void <link linkend="_a_e_sni_8c_1a4c378473ae20532605ee2c7f11951d07">finalizer</link> (
void )</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>static __m128i <link linkend="_a_e_sni_8c_1aa38040aefaae7197f31ec3283f2f5a7b">aes_128_expAssist</link> (
__m128i temp1, __m128i temp2)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>static void <link linkend="_a_e_sni_8c_1adc9b344881a914bc8bf81b9758b9cd38">aes_128_key_expansion</link> (
__m128i * schedule, uint8_t * encKey)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>static void <link linkend="_a_e_sni_8c_1a6e128c55d97fd22321a02542ce999ca2">aes_192_expAssist</link> (
__m128i * temp1, __m128i * temp2, __m128i * temp3)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>static void <link linkend="_a_e_sni_8c_1afbb6d32cfca5cbf0420b46a664fb8d35">aes_192_key_expansion</link> (
__m128i * schedule, uint8_t * encKey)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>static void <link linkend="_a_e_sni_8c_1a510f8f3d2aad6121918a9fe48f51ed53">aes_256_expAssist1</link> (
__m128i * temp1, __m128i * temp2)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>static void <link linkend="_a_e_sni_8c_1ad5eb66ee70279b797768dcf6beb2ed24">aes_256_expAssist2</link> (
__m128i * temp1, __m128i * temp3)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>static void <link linkend="_a_e_sni_8c_1af64c3c510db32900041bcb63b0d3029f">aes_256_key_expansion</link> (
__m128i * schedule, uint8_t * encKey)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>__m128i * <link linkend="_a_e_sni_8c_1a5c54c33b4cb1376ceb42c12d1b5256cb">load_key_expansion</link> (
uint8_t * key, <link linkend="_a_e_sni_8h_1a42b3206764c080364694538d57a0c659">AESKeyMode</link> keymode)<para><emphasis>Loads the key expansion based on the passed key and keymode.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="_a_e_sni_8c_1a715c57e731d131d7442c256a35236de8">aes_ni_enc</link> (
__m128i * data, __m128i * key_schedule, <link linkend="_a_e_sni_8h_1a42b3206764c080364694538d57a0c659">AESKeyMode</link> keymode)<para><emphasis>Encrypts the data using AES implemented directly on the Intel Chip.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="_a_e_sni_8c_1ae036fa7b2c53b24d1a68b92c6a26757d">aes_ni_dec</link> (
__m128i * data, __m128i * key_schedule, <link linkend="_a_e_sni_8h_1a42b3206764c080364694538d57a0c659">AESKeyMode</link> keymode)<para><emphasis>Decrypts the data using AES implemented directly on the Intel Chip.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="_a_e_sni_8c_1a2c6df8913bd9dd9309664e54f59da342">aes_cbc_ni_enc</link> (
uint8_t * inpt, uint8_t * outt, uint8_t * ivec, unsigned long mlength, uint8_t * epoch_key, <link linkend="_a_e_sni_8h_1a42b3206764c080364694538d57a0c659">AESKeyMode</link> keymode)<para><emphasis>Encrypts the data using Cipher Block Chain (CBC) AES implemented directly on the Intel Chip.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="_a_e_sni_8c_1ade9a9440626473e9f4414a0aff92ae54">aes_cbc_ni_dec</link> (
uint8_t * inpt, uint8_t * outt, uint8_t * ivec, unsigned long clength, uint8_t * epoch_key, <link linkend="_a_e_sni_8h_1a42b3206764c080364694538d57a0c659">AESKeyMode</link> keymode)<para><emphasis>Decrypts the data using Cipher Block Chain (CBC) AES implemented directly on the Intel Chip.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="_a_e_sni_8c_1ab3a399efd7b9d9f200fe14b5ce52cf85">aes_ctr_ni</link> (
uint8_t * inpt, uint8_t * outt, uint8_t * ivec, unsigned long mlength, uint8_t * epoch_key, <link linkend="_a_e_sni_8h_1a42b3206764c080364694538d57a0c659">AESKeyMode</link> keymode)<para><emphasis>Encrypts or Decrypts the data using Counter Mode (CTR) AES implemented directly on the Intel Chip.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
        </section>
    <simplesect>
        <title>Detailed Description</title>

<para>The source file for the AES encryption (basic as well as CBC and CTR mode) implemented with Intel Intrinsics</para>

<para>08-23-2018  -fvisibility=hidden -maes <formalpara><title>Version: </title>

<para>0.0.1 </para>
</formalpara>
<formalpara><title>Author: </title>

<para>Jan Niegsch </para>
</formalpara>
</para>
    <para>Definition in file /Users/developer/Desktop/_prging/SimpleCrypt/src/AESni.c</para>
    </simplesect>
</section>
